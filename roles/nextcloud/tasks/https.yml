---
- name: Check live certificate directory
  ansible.builtin.stat:
    path: '/etc/letsencrypt/live/{{ pi.domain }}'
  become: true
  register: ssl_dir
  tags: [nextcloud, nginx, ssl, update]

- name: Stop nginx (to free ports)
  ansible.builtin.service:
    name: nginx
    state: stopped
  become: true
  when: ssl_dir.stat.isdir is not defined or not ssl_dir.stat.isdir
  tags: [nextcloud, nginx, ssl, update]

- name: Add certificate
  ansible.builtin.command:
    cmd: certbot certonly -d {{ pi.domain }} --email {{ ssl.email }} --standalone --noninteractive --agree-tos
    creates: '/etc/letsencrypt/live/{{ pi.domain }}'
  become: true
  when: ssl_dir.stat.isdir is not defined or not ssl_dir.stat.isdir
  tags: [nextcloud, ssl, update]

- name: Add config for nextcloud page
  ansible.builtin.template:
    src: nginx/nextcloud.config.j2
    dest: /etc/nginx/sites-enabled/nextcloud
    mode: "644"
  notify:
    - reload nginx
  become: true
  tags: [nextcloud, nginx, ssl, update]

- name: Start nginx again
  ansible.builtin.service:
    name: nginx
    state: started
  become: true
  tags: [nextcloud, nginx, ssl, update]

- name: Add certbot renewal service
  ansible.builtin.template:
    src: systemd/certbot_renewal.service.j2
    dest: /etc/systemd/system/certbot_renewal.service
    mode: "644"
  become: true
  tags: [nextcloud, ssl, systemd, update]

- name: Add certbot renewal timer
  ansible.builtin.template:
    src: systemd/certbot_renewal.timer.j2
    dest: /etc/systemd/system/certbot_renewal.timer
    mode: "644"
  become: true
  tags: [nextcloud, ssl, systemd, update]

- name: Start certbot renewal timer
  ansible.builtin.systemd:
    name: certbot_renewal.timer
    state: started
    enabled: true
  become: true
  tags: [nextcloud, ssl, systemd, update]
